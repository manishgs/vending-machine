{
  "compilerOptions": {
    "target": "es2016", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */ // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "module": "commonjs", /* Specify what module code is generated. */ // "rootDir": "./src",                                  /* Specify the root folder within your source files. */
    "moduleResolution": "node", /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": ".", /* Specify the base directory to resolve non-relative module names. */ // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    "rootDirs": [
      "server"
    ], /* Allow multiple folders to be treated as one when resolving modules. */ // "typeRoots": [],                                  /* Specify multiple folders that act like `./node_modules/@types`. */
    "resolveJsonModule": true, /* Enable importing .json files */ // "noResolve": true,                                /* Disallow `import`s, `require`s or `<reference>`s from expanding the number of files TypeScript should add to a project. */
    "outDir": "./dist", /* Specify an output folder for all emitted files. */ // "removeComments": true,                           /* Disable emitting comments. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */ // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */ /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */ // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied `any` type.. */
    "skipLibCheck": true,
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "noEmit": true,
    "incremental": true,
    "isolatedModules": true,
    "jsx": "preserve"
  },
  "include": [
    "server/**/*.ts",
    "tests/**/*.test.ts",
    "pages/**/*.tsx"
  ],
  "exclude": [
    "node_modules",
    "next.config.js",
    "next-env.d.ts"
  ]
}
